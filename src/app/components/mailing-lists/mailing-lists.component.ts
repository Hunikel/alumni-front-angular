import { Component } from '@angular/core';
import { MailingListService } from '../../service/mailing/mailing-list-service.service';
import { MailingListDTO } from '../../model/mailing-list-dto.model';
import { Subscription } from 'rxjs';

@Component({
  selector: 'app-mailing-lists',
  templateUrl: './mailing-lists.component.html',
  styleUrls: ['./mailing-lists.component.css']
})
export class MailingListsComponent {
  mailingLists: MailingListDTO[] = [];
  newMailingListName: string = '';
  private mailingListsSubscription: Subscription | undefined;

  constructor(private mailingListService: MailingListService) {}

  ngOnInit() {
    this.loadMailingLists();
  }

  loadMailingLists() {
    this.mailingListsSubscription = this.mailingListService.getAllMailingLists().subscribe({
      next: (mailingLists: MailingListDTO[]) => {
        this.mailingLists = mailingLists;
      },
      error: (error: any) => {
        // Handle error
      }
    });
  }

  createMailingList() {
    if (this.newMailingListName.trim() === '') {
      return;
    }

    const newMailingList: MailingListDTO = {
      emails: [],
      id: 0, // Set the ID to 0 as it will be generated by the backend
      name: this.newMailingListName
    };

    this.mailingListService.createMailingList(newMailingList).subscribe({
      next: (createdMailingList: MailingListDTO) => {
        this.mailingLists.push(createdMailingList);
        this.newMailingListName = '';
      },
      error: (error: any) => {
        // Handle error
      }
    });
  }

  deleteMailingList(mailingListId: number) {
    this.mailingListService.deleteMailingList(mailingListId).subscribe({
      next: () => {
        this.mailingLists = this.mailingLists.filter((list) => list.id !== mailingListId);
      },
      error: (error: any) => {
        // Handle error
      }
    });
  }

  ngOnDestroy() {
    // Unsubscribe from the mailingListsSubscription to prevent memory leaks
    this.mailingListsSubscription?.unsubscribe();
  }
}
